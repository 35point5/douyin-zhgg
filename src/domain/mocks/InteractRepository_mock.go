// Code generated by MockGen. DO NOT EDIT.
// Source: douyin-service/domain (interfaces: InteractRepository)   

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
        domain "douyin-service/domain"
        reflect "reflect"

        gomock "github.com/golang/mock/gomock"
)

// MockInteractRepository is a mock of InteractRepository interface.
type MockInteractRepository struct {
        ctrl     *gomock.Controller
        recorder *MockInteractRepositoryMockRecorder
}

// MockInteractRepositoryMockRecorder is the mock recorder for MockInteractRepository.
type MockInteractRepositoryMockRecorder struct {
        mock *MockInteractRepository
}

// NewMockInteractRepository creates a new mock instance.
func NewMockInteractRepository(ctrl *gomock.Controller) *MockInteractRepository {
        mock := &MockInteractRepository{ctrl: ctrl}
        mock.recorder = &MockInteractRepositoryMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInteractRepository) EXPECT() *MockInteractRepositoryMockRecorder {
        return m.recorder
}

// FavoriteActionByUserId mocks base method.
func (m *MockInteractRepository) FavoriteActionByUserId(arg0, arg1 int64, arg2 int32) (bool, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "FavoriteActionByUserId", arg0, arg1, arg2)
        ret0, _ := ret[0].(bool)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// FavoriteActionByUserId indicates an expected call of FavoriteActionByUserId.
func (mr *MockInteractRepositoryMockRecorder) FavoriteActionByUserId(arg0, arg1, arg2 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FavoriteActionByUserId", reflect.TypeOf((*MockInteractRepository)(nil).FavoriteActionByUserId), arg0, arg1, arg2)
}

// GetFavoriteListByUserId mocks base method.
func (m *MockInteractRepository) GetFavoriteListByUserId(arg0 int64) ([]domain.FavoriteListModel, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "GetFavoriteListByUserId", arg0)
        ret0, _ := ret[0].([]domain.FavoriteListModel)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// GetFavoriteListByUserId indicates an expected call of GetFavoriteListByUserId.
func (mr *MockInteractRepositoryMockRecorder) GetFavoriteListByUserId(arg0 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFavoriteListByUserId", reflect.TypeOf((*MockInteractRepository)(nil).GetFavoriteListByUserId), arg0)}

// GetVideoModelsById mocks base method.
func (m *MockInteractRepository) GetVideoModelsById(arg0 []int64) ([]domain.VideoModel, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "GetVideoModelsById", arg0)
        ret0, _ := ret[0].([]domain.VideoModel)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// GetVideoModelsById indicates an expected call of GetVideoModelsById.
func (mr *MockInteractRepositoryMockRecorder) GetVideoModelsById(arg0 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVideoModelsById", reflect.TypeOf((*MockInteractRepository)(nil).GetVideoModelsById), arg0)
}