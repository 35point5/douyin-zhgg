// Code generated by MockGen. DO NOT EDIT.
// Source: douyin-service/domain (interfaces: PublishRepository)

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
        domain "douyin-service/domain"
        reflect "reflect"

        gomock "github.com/golang/mock/gomock"
)

// MockPublishRepository is a mock of PublishRepository interface.
type MockPublishRepository struct {
        ctrl     *gomock.Controller
        recorder *MockPublishRepositoryMockRecorder
}

// MockPublishRepositoryMockRecorder is the mock recorder for MockPublishRepository.
type MockPublishRepositoryMockRecorder struct {
        mock *MockPublishRepository
}

// NewMockPublishRepository creates a new mock instance.
func NewMockPublishRepository(ctrl *gomock.Controller) *MockPublishRepository {
        mock := &MockPublishRepository{ctrl: ctrl}
        mock.recorder = &MockPublishRepositoryMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPublishRepository) EXPECT() *MockPublishRepositoryMockRecorder {
        return m.recorder
}

// AddVideo mocks base method.
func (m *MockPublishRepository) AddVideo(arg0 *domain.VideoModel) error {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "AddVideo", arg0)
        ret0, _ := ret[0].(error)
        return ret0
}

// AddVideo indicates an expected call of AddVideo.
func (mr *MockPublishRepositoryMockRecorder) AddVideo(arg0 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddVideo", reflect.TypeOf((*MockPublishRepository)(nil).AddVideo), arg0)
}

// LisVideoByUserId mocks base method.
func (m *MockPublishRepository) LisVideoByUserId(arg0 int64) ([]domain.VideoModel, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "LisVideoByUserId", arg0)
        ret0, _ := ret[0].([]domain.VideoModel)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// LisVideoByUserId indicates an expected call of LisVideoByUserId.
func (mr *MockPublishRepositoryMockRecorder) LisVideoByUserId(arg0 interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LisVideoByUserId", reflect.TypeOf((*MockPublishRepository)(nil).LisVideoByUserId), arg0)
}